"use strict";
(self["webpackChunkwebpack"] = self["webpackChunkwebpack"] || []).push([["src_views_Sandbox_svelte"],{

/***/ "./src/views/Sandbox.svelte":
/*!**********************************!*\
  !*** ./src/views/Sandbox.svelte ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var C_Users_Seb_Documents_homecode_webpack_node_modules_svelte_loader_lib_hot_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");
/* harmony import */ var C_Users_Seb_Documents_homecode_webpack_node_modules_svelte_hmr_runtime_proxy_adapter_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js */ "./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js");
/* module decorator */ module = __webpack_require__.hmd(module);
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");
/* src\views\Sandbox.svelte generated by Svelte v3.47.0 */



const file = "src\\views\\Sandbox.svelte";

function create_fragment(ctx) {
	const block = {
		c: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		d: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Sandbox', slots, []);
	let renderer;
	let camera;
	let scene;
	let fork;

	function init() {
		// create the renderer
		renderer = new three__WEBPACK_IMPORTED_MODULE_1__.WebGLRenderer();

		renderer.setSize(window.innerWidth, window.innerHeight);
		document.body.appendChild(renderer.domElement);

		// create the camera
		camera = new three__WEBPACK_IMPORTED_MODULE_1__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

		camera.position.z = 5;

		// create the scene
		scene = new three__WEBPACK_IMPORTED_MODULE_1__.Scene();

		// create the fork
		const forkGeometry = new three__WEBPACK_IMPORTED_MODULE_1__.CylinderGeometry(0.5, 0.5, 2, 32);

		const forkMaterial = new three__WEBPACK_IMPORTED_MODULE_1__.MeshBasicMaterial({ color: 0xffff00 });
		fork = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh(forkGeometry, forkMaterial);
		scene.add(fork);

		// render the scene
		renderer.render(scene, camera);
	}

	function animate() {
		requestAnimationFrame(animate);

		// rotate the fork slightly
		fork.rotation.x += 0.01;

		fork.rotation.y += 0.01;

		// render the scene
		renderer.render(scene, camera);
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Sandbox> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		THREE: three__WEBPACK_IMPORTED_MODULE_1__,
		renderer,
		camera,
		scene,
		fork,
		init,
		animate
	});

	$$self.$inject_state = $$props => {
		if ('renderer' in $$props) renderer = $$props.renderer;
		if ('camera' in $$props) camera = $$props.camera;
		if ('scene' in $$props) scene = $$props.scene;
		if ('fork' in $$props) fork = $$props.fork;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$: {
		init();
		animate();
	}

	return [];
}

class Sandbox extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Sandbox",
			options,
			id: create_fragment.name
		});
	}
}

if (module && module.hot) {}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sandbox);



/***/ })

}]);
//# sourceMappingURL=src_views_Sandbox_svelte.js.map